name: Deploy to AWS Lambda without S3

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  STACK_NAME: user-api-stack

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Zip Lambda Functions
      run: |
        mkdir -p zipped
        zip -j zipped/create_user.zip lambda/create_user.py
        zip -j zipped/get_user.zip lambda/get_user.py
        zip -j zipped/delete_user.zip lambda/delete_user.py

    - name: Delete failed stack if exists
      run: |
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name ${{ env.STACK_NAME }} --query "Stacks[0].StackStatus" --output text || echo "NOT_FOUND")
        if [[ "$STACK_STATUS" == "ROLLBACK_COMPLETE" ]]; then
          aws cloudformation delete-stack --stack-name ${{ env.STACK_NAME }}
          aws cloudformation wait stack-delete-complete --stack-name ${{ env.STACK_NAME }}
        fi

    - name: Deploy Infrastructure via CloudFormation
      run: |
        aws cloudformation deploy \
          --template-file template.yaml \
          --stack-name ${{ env.STACK_NAME }} \
          --capabilities CAPABILITY_NAMED_IAM \
          --no-fail-on-empty-changeset \
          --parameter-overrides Environment=dev

    - name: Update Lambda Code
      run: |
        aws lambda update-function-code \
          --function-name CreateUser-dev \
          --zip-file fileb://zipped/create_user.zip \
          --region ${{ env.AWS_REGION }}

        aws lambda update-function-code \
          --function-name GetUser-dev \
          --zip-file fileb://zipped/get_user.zip \
          --region ${{ env.AWS_REGION }}

        aws lambda update-function-code \
          --function-name DeleteUser-dev \
          --zip-file fileb://zipped/delete_user.zip \
          --region ${{ env.AWS_REGION }}
